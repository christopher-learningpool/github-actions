name: PHPUnit Workflow

on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
      testsuites:
        required: true
        type: string
      coverage:
        required: false
        type: boolean
        default: false

jobs:
  phpunit:
    runs-on: ubuntu-latest
    name: Testsuite (${{ matrix.testsuite }})

    strategy:
      matrix:
        testsuite: ${{ fromJSON(inputs.testsuites) }}

    steps:
      - uses: actions/checkout@v2

      - name: Get composer cache directory
        id: composer-cache
        working-directory: ./${{ inputs.directory }}
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Bit of a hardcode.
          key: ${{ runner.os }}-${{ hashFiles('./api/composer.lock') }}-${{ hashFiles('./core/composer.lock') }}

      - name: Setup PHP
        if: ${{ inputs.coverage == false }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: composer:v1

      - name: Setup PHP with coverage
        if: ${{ inputs.coverage == true }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: pcov
          tools: composer:v1

      - name: Install dependencies for ${{ inputs.directory }}
        working-directory: ./${{ inputs.directory }}
        run: composer install

      - name: Run PHPUnit testsuite
        if: ${{ inputs.coverage == false }}
        working-directory: ./${{ inputs.directory }}
        # Composer can't accept a testsuite with spaces in the name.
        run: vendor/bin/phpunit --testsuite ${{ matrix.testsuite }}

      - name: Run PHPUnit testsuite with coverage
        if: ${{ inputs.coverage == true }}
        working-directory: ./${{ inputs.directory }}
        # Composer can't accept a testsuite with spaces in the name.
        run: vendor/bin/phpunit --testsuite ${{ matrix.testsuite }} --coverage-clover ./${{ inputs.directory }}-coverage.xml