name: PHPUnit Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  TESTSUITE_API: ["api-testsuite-1","api-testsuite-2"]

jobs:
  # matrix:
  #   name: Test Matrix
  #   runs-on: ubuntu-latest

  #   outputs:
  #     apiSuite: ${{ steps.execAPI.outputs.matrix }}
  #     coreSuite: ${{ steps.execCORE.outputs.matrix }}

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Get composer cache directory
  #       id: composer-cache
  #       # Needs a working directory to reach a composer.json
  #       working-directory: ./api
  #       run: echo "::set-output name=dir::$(composer config cache-files-dir)"

  #     - name: Cache Composer dependencies
  #       uses: actions/cache@v2
  #       id: cache
  #       with:
  #         path: ${{ steps.composer-cache.outputs.dir }}
  #         # Bit of a hardcode.
  #         key: ${{ runner.os }}-${{ hashFiles('./api/composer.lock') }}-${{ hashFiles('./core/composer.lock') }}

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: '7.4'
  #         tools: composer:v1
  #   # API Suites
  #     - working-directory: ./api
  #       run: composer install

  #     - working-directory: ./api
  #       id: execAPI
  #       run: >
  #         echo "::set-output name=matrix::$(
  #         vendor/bin/phpunit --list-suites |
  #         sed -ne '/Available test suite(s):/,$p' |
  #         sed '1d' | sed 's/ - //g' |
  #         jq -R -s -c 'split("\n")[:-1]')"
  #   # CORE Suites
  #     - working-directory: ./core
  #       run: composer install

  #     - working-directory: ./core
  #       id: execCORE
  #       run: >
  #         echo "::set-output name=matrix::$(
  #         vendor/bin/phpunit --list-suites |
  #         sed -ne '/Available test suite(s):/,$p' |
  #         sed '1d' | sed 's/ - //g' |
  #         jq -R -s -c 'split("\n")[:-1]')"

  # debug:
  #   # needs: matrix
  #   runs-on: ubuntu-latest

  #   steps:
  #     - run: |
  #         echo "Slug variables"
  #         echo " - ${{ env.GITHUB_REF_SLUG }}"
  #         echo " - ${{ env.GITHUB_HEAD_REF_SLUG }}"
  #         echo " - ${{ env.GITHUB_BASE_REF_SLUG }}"
  #         echo " - ${{ env.GITHUB_REPOSITORY_SLUG }}"
  #         # output e.g. : master feat-new-feature v1.0.0 product-1.0.0-rc.2 new-awesome-product
  #         echo "Slug URL variables"
  #         echo " - ${{ env.GITHUB_REF_SLUG_URL }}"
  #         echo " - ${{ env.GITHUB_HEAD_REF_SLUG_URL }}"
  #         echo " - ${{ env.GITHUB_BASE_REF_SLUG_URL }}"
  #         echo " - ${{ env.GITHUB_REPOSITORY_SLUG_URL }}"
  #         # output e.g. : master feat-new-feature v1-0-0 product-1-0-0-rc-2 new-awesome-product
  #         echo "Short SHA variables"
  #         echo " - ${{ env.GITHUB_SHA_SHORT }}"

  # phpunitCore:
  #   name: PHPUnit (Core)
  #   needs: matrix

  #   uses: christopher-learningpool/github-actions/.github/workflows/workflow_unit.yml@github-actions-unit
  #   with:
  #     directory: core
  #     testsuites: ${{ needs.matrix.outputs.coreSuite }}

  build-env:
    runs-on: ubuntu-latest
    name: Build Environment Variables.

    outputs:
      apiSuite: ${{ steps.apisuite.outputs.matrix }}
      coreSuite: ${{ steps.coresuite.outputs.matrix }}
      phpVersion: ${{ steps.phpversion.outputs.matrix }}

    steps:
      - id: apisuite
        run: echo "::set-output name=matrix::\"${{ env.TESTSUITE_API }}\""
      # - id: coresuite
      #   run: echo "::set-output name=matrix::'${{ env.TESTSUITE_CORE }}'"
      # - id: phpversion
      #   run: echo "::set-output name=matrix::'${{ env.PHP_VERSION }}'"

  phpunitAPI:
    name: PHPUnit (API)
    needs: build-env

    uses: christopher-learningpool/github-actions/.github/workflows/workflow_unit.yml@github-actions-unit
    with:
      directory: api
      testsuites: ${{ needs.build-env.outputs.apiSuite }}