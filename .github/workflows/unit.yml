name: PHPUnit Tests

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-cache:
    runs-on: ubuntu-latest
    name: Build Cache

    steps:
      - uses: actions/checkout@v2

      - name: Get composer cache directory
        id: composer-cache
        working-directory: ./core
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ hashFiles('./api/composer.lock') }}-${{ hashFiles('./core/composer.lock') }}

      - name: Setup PHP
        if: steps.cache.outputs.cache-hit != 'true'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: composer:v1

      - name: Install dependencies (core)
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ./core
        run: composer install

      - name: Install dependencies (api)
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ./api
        run: composer install

  phpunitCore:
    name: PHPUnit (Core)
    needs: build-cache

    uses: christopher-learningpool/github-actions/.github/workflows/workflow_unit.yml@main
    with:
      directory: core
      testsuites: '["Project-Test-Suite"]'
      coverage: true

  phpunitAPI:
    name: PHPUnit (API)
    needs: build-cache

    uses: christopher-learningpool/github-actions/.github/workflows/workflow_unit.yml@main
    with:
      directory: api
      testsuites: '["api-testsuite-1","api-testsuite-2"]'
      coverage: true

  coverage-report:
    name: Coverage Reporting
    needs: [phpunitCore, phpunitAPI]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: mkdir coveragetmp

      - uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: ./coveragetmp

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer:v1

      - name: Get composer cache directory
        id: composer-cache
        working-directory: ./core
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ hashFiles('./coveragetmp/composer.lock') }} }}

      - working-directory: ./coveragetmp
        run: composer require --dev phpunit/phpcov:7.0.2

      - run: ./coveragetmp/vendor/bin/phpcov merge --html ./coveragetmp/report ./coveragetmp

      - name: Upload full coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: Core-API-HTML-Coverage-Report
          path: ./coveragetmp/report
          retention-days: 2
          
  release:
    if: github.ref == 'refs/heads/main'

    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_GH_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - run: npm ci

      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GH_TOKEN }}

      # - name: Generate Slack Report
      #   working-directory: ./coveragetmp
      #   id: slack-report
      #   run: |
      #     echo "::set-output name=summary::$(./vendor/bin/phpcov merge --text -- ./ |
      #         sed -ne '/Code Coverage Report:/,$p' |
      #         sed -n 5,7p | sed 's/ //g' |
      #         sed 's/:(/: (/g' |  jq -R -sc 'split("\n")[:-1]')"

      # - run: echo '${{fromJSON(steps.slack-report.outputs.summary)[0]}}'
      # - run: echo '${{ github }}'
